#hatrack
  #header
    #font_controls
      %a.fontSize.down -A
      %a.fontSize.reset A
      %a.fontSize.up A+

    #keyboard_controls
      #toggle_help ?
      #hints= render :partial => '/sprints/faq'


    #column_controls
      .toggle.red{'data-color' => 'red'} Red
      .toggle.black{'data-color' => 'black'} Black
      .toggle.yellow{'data-color' => 'yellow'} Yellow
      .toggle.blue{'data-color' => 'blue'} Blue
      .toggle.white{'data-color' => 'white'} White


    #current_sprint
      %span#current_name{:title => @current_sprint.name}= "#{truncate(@current_sprint.name,{:lenght => 30})} (#{print_date(@current_sprint.start_date)} - #{print_date(@current_sprint.end_date, 'Current')})"

      #edit_sprint_form.form
        - semantic_form_for @current_sprint do |form|
          - form.inputs do
            = form.input :name
            = form.input :start_date,:input_html => { :class => 'date_input' }
            = form.input :end_date,:input_html => { :class => 'date_input' }
          - form.buttons do
            %button#sprint_submit.update{:type => 'submit'} Update Sprint
            %button.cancel Cancel

      #new_sprint_form.form
        - semantic_form_for Sprint.new do |form|
          - form.inputs do
            = form.input :name,:input_html => { :id => 'new_sprint[name]', :value => 'Enter a Sprint Name'}
            = form.input :start_date,:input_html => { :id => 'new_sprint[start_date]', :class => 'date_input', :value => Date.today }
          - form.buttons do
            %button#sprint_submit.create{:type => 'submit'} Create Sprint
            %button.cancel Cancel

    #edit_sprint.form_toggle edit
    #new_sprint.form_toggle new

    %ul#sprints
      - @sprints[0..9].each do |sprint|
        %li
          %a{:title => sprint.name, :href => "/sprints/show/#{sprint.id}"}= "#{truncate(sprint.name,{:length => 25})} (#{print_date(sprint.start_date) } - #{print_date(sprint.end_date,"Current") })"


    #logo HatRack



  %table#racks
    %tr
      - for color in current_user.pref.colors
        = render :partial => "/sprints/rack", :locals => {:color => color, :hats => @current_sprint.send("#{color}_hats".to_sym), :num_cols => Hat::COLORS.size  }

  #new_hat
    %button.add_hat.yellow{:value => 'yellow'} Add <span class="underline">Y</span>ellow Hat
    %button.add_hat.black{:value => 'black'} Add <span class="underline">B</span>lack Hat

  %a#logout{ :href => '/users/sign_out' } Logout



